"use strict";(self.webpackChunkultimate_jekyll=self.webpackChunkultimate_jekyll||[]).push([[7674],{7674:(e,n,t)=>{t.r(n),t.d(n,{init:()=>o,loadData:()=>a});let i=null;function o(e){i=e,function(){const e=document.getElementById("invite-team-member-btn");e&&e.addEventListener("click",r),document.addEventListener("click",e=>{const n=e.target.dataset.action,t=e.target.dataset.member;n&&t&&(e.preventDefault(),async function(e,n){switch(e){case"change-role":!async function(e){const n=prompt("Enter new role (admin, member, viewer):");if(n&&["admin","member","viewer"].includes(n))try{console.log("Changing role for member:",e,"to",n),i.utilities().showNotification("Member role updated successfully","success")}catch(e){console.error("Failed to update member role:",e),i.utilities().showNotification("Failed to update member role. Please try again.","danger")}}(n);break;case"remove":!async function(e){if(confirm("Are you sure you want to remove this member from your team?"))try{console.log("Removing member:",e),i.utilities().showNotification("Member removed successfully","success")}catch(e){console.error("Failed to remove member:",e),i.utilities().showNotification("Failed to remove member. Please try again.","danger")}}(n)}}(n,t))})}()}function a(e){e&&(function(e){const n=document.getElementById("team-list");if(!n)return;const t=i.auth().getUser(),o=[{id:t?.uid,email:t?.email,name:"You",role:"owner",status:"active",joinedAt:Date.now()},...e].map(e=>{return`\n    <div class="list-group-item">\n      <div class="d-flex justify-content-between align-items-center">\n        <div>\n          <strong>${e.name||e.email}</strong>\n          ${"owner"===e.role?"":`<small class="text-muted d-block">${e.email}</small>`}\n          <small class="text-muted">${s(e.role)}</small>\n        </div>\n        <div class="d-flex align-items-center">\n          <span class="badge bg-${n=e.role,{owner:"primary",admin:"success",member:"secondary",viewer:"light"}[n]||"secondary"} me-2">${s(e.role)}</span>\n          ${"owner"!==e.role?function(e){return"pending"===e.status?'\n      <button class="btn btn-sm btn-outline-secondary" disabled>\n        Pending\n      </button>\n    ':`\n    <div class="dropdown">\n      <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">\n        Actions\n      </button>\n      <ul class="dropdown-menu">\n        <li><a class="dropdown-item" href="#" data-action="change-role" data-member="${e.id}">Change Role</a></li>\n        <li><hr class="dropdown-divider"></li>\n        <li><a class="dropdown-item text-danger" href="#" data-action="remove" data-member="${e.id}">Remove Team Member</a></li>\n      </ul>\n    </div>\n  `}(e):""}\n        </div>\n      </div>\n    </div>\n  `;var n}).join("");n.innerHTML=o||'<p class="text-muted">No team members yet.</p>'}(e.team?.members||[]),function(e){const n=document.getElementById("pending-invites");if(!n||0===e.length)return;const t=e.map(e=>{return`\n    <div class="list-group-item">\n      <div class="d-flex justify-content-between align-items-center">\n        <div>\n          <strong>${e.email}</strong>\n          <small class="text-muted d-block">Invited ${n=e.invitedAt,n?new Date(n).toLocaleDateString():"Unknown"}</small>\n        </div>\n        <div>\n          <button class="btn btn-sm btn-outline-danger" onclick="cancelInvite('${e.id}')">\n            Cancel Invite\n          </button>\n        </div>\n      </div>\n    </div>\n  `;var n}).join("");n.innerHTML=t}(e.team?.invites||[]))}function s(e){return{owner:"Owner",admin:"Admin",member:"Member",viewer:"Viewer"}[e]||"Member"}async function r(){const e=prompt("Enter the email address of the person you want to invite:");if(e&&e.includes("@"))try{console.log("Inviting member:",e),i.utilities().showNotification(`Invitation sent to ${e}`,"success")}catch(e){console.error("Failed to invite member:",e),i.utilities().showNotification("Failed to send invitation. Please try again.","danger")}}}}]);